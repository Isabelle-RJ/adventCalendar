services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php-app
    working_dir: /var/www/html
    volumes:
      - ./api:/var/www/html
    depends_on:
      - postgres
    networks:
      - laravel_network
    command: php-fpm

  nginx:
    image: nginx:alpine
    container_name: nginx_server
    volumes:
      - ./api:/var/www/html
      - ./default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "9001:80"
    depends_on:
      - app
    environment:
      - SERVER_NAME=${APP_DOMAIN}
    networks:
      - laravel_network

  postgres:
    image: postgres:17
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - laravel_network

  mongo:
    image: mongo:8
    container_name: mongo_db
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - laravel_network

  bun:
    image: oven/bun:1.1.36
    container_name: bun_server
    working_dir: /var/www/html
    command: sh -c "tail -f /dev/null"
    volumes:
      - ./frontend:/var/www/html
    ports:
      - "5173:5173"
    networks:
      - laravel_network

networks:
  laravel_network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data: